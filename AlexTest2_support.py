#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.3
#  in conjunction with Tcl version 8.6
#    Jul 04, 2020 04:08:09 PM CDT  platform: Windows NT
#    Jul 07, 2020 12:40:33 PM CDT  platform: Windows NT
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def readButtonPressed(p1):
    inner_frame = w.Scrolledwindow1_f
    print('AlexTest2_support.readButtonPressed', type(p1))
    sys.stdout.flush()
    wid = p1.widget
    tl = wid.nametowidget(wid.winfo_parent())
    #tf = tl.nametowidget('TFrame1')
    print(tl.children)
    sys.stdout.flush()
    tf = tl.children['!frame'].children['!scrolledwindow']#.children['!scrolledentry']#.children['!frame']
    print(tf.children)
    sys.stdout.flush()
    #return
    #te = tf.children['!entry']
    #te.grid(row=1, column=1)
    #te.delete(0, tk.END)
    #te.insert(tk.END, 'Hello')
    fname = 'C:\\Users\\Afifa Shareef\\Desktop\\UTSA Assignments\\Summer_2020\\UI_project\\OneDrive_1_7-6-2020\\Earthquake.csv'
    data = pd.read_csv(fname)
    indx = -1;
    for i in range(0, data.shape[0]):
        for j in range(0, data.shape[1]):
            indx = indx + 1
            w.ents[indx] = ttk.Entry(inner_frame, width=20, font=('Arial',16,'bold'))
            w.ents[indx].grid(row=i, column=j)
            #te.delete(0, tk.END)
            w.ents[indx].insert(tk.END, data.iloc[i, j])
    w.ents[0].wait_visibility()
    bbox = inner_frame.bbox()
    w.Scrolledwindow1.configure(scrollregion=bbox)

def bob():
    print('AlexTest2_support.{}')
    sys.stdout.flush()

def clearTable(p1):
    print('AlexTest2_support.clearTable')
    sys.stdout.flush()
    for i in reversed(list(range(len(w.ents)))):
        try:
            w.ents[i].destroy()
        except:
            pass
    w.ents = {}


def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import AlexTest2
    AlexTest2.vp_start_gui()

def summarize(p1):
    inner_frame = w.Scrolledwindow1_f
    print('AlexTest2_support.readButtonPressed', type(p1))
    sys.stdout.flush()
    wid = p1.widget
    tl = wid.nametowidget(wid.winfo_parent())
    #tf = tl.nametowidget('TFrame1')
    print(tl.children)
    sys.stdout.flush()
    tf = tl.children['!frame'].children['!scrolledwindow']#.children['!scrolledentry']#.children['!frame']
    print(tf.children)
    sys.stdout.flush()
    #return
    #te = tf.children['!entry']
    #te.grid(row=1, column=1)
    #te.delete(0, tk.END)
    #te.insert(tk.END, 'Hello')
    fname = 'C:\\Users\\Afifa Shareef\\Desktop\\UTSA Assignments\\Summer_2020\\UI_project\\OneDrive_1_7-6-2020\\Earthquake.csv'
    data = pd.read_csv(fname)
    statistics = data.describe(include = 'all')
    lstf = statistics.values.tolist() 
    columnNames = []
    for col in statistics:
        columnNames.append(col)
    rowNames = ['count','unique','top','frequency','mean','std','min','25%','50%','75%','max']
    indx = -1;
    for i in range(len(rowNames)):
            indx = indx + 1
            w.ents[indx] = ttk.Entry(inner_frame, width=20, font=('Arial',16,'bold'))
            w.ents[indx].grid(row=i+1, column=0)
            #te.delete(0, tk.END)
            w.ents[indx].insert(tk.END, rowNames[i])
    #indx = -1;
    for j in range(len(columnNames)):
            indx = indx + 1
            w.ents[indx] = ttk.Entry(inner_frame, width=20, font=('Arial',16,'bold'))
            w.ents[indx].grid(row=0, column=j+1)
            #te.delete(0, tk.END)
            w.ents[indx].insert(tk.END, columnNames[j])
    #indx = -1;
    for i in range(len(lstf)):
        for j in range(len(lstf[0])):
            indx = indx + 1
            w.ents[indx] = ttk.Entry(inner_frame, width=20, font=('Arial',16,'bold'))
            w.ents[indx].grid(row=i+1, column=j+1)
            #te.delete(0, tk.END)
            w.ents[indx].insert(tk.END, lstf[i][j])
    w.ents[0].wait_visibility()
    bbox = inner_frame.bbox()
    w.Scrolledwindow1.configure(scrollregion=bbox)





